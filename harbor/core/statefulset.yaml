apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: harbor-core
  namespace: harbor
  labels:
    heritage: Helm
    release: harbor
    chart: harbor
    app: "harbor"
    component: core
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      release: harbor
      app: "harbor"
      component: core
  template:
    metadata:
      labels:
        release: harbor
        app: "harbor"
        component: core
      annotations:
        checksum/configmap: 42a17fed1609ba948fbc3b1bcbc8f1a59d5d9cb558d15399b00eebb278de4079
        checksum/secret: dd57744f84b77c3dfa2e4891cee8543b94383ac024f5a5cfc022dee9344b35fa
        checksum/secret-jobservice: 6b4e9dbcdea1d0bbc28a1b59ba5fc2f68a44edbe1177e8b0bbf20d8f8c2b13be
    spec:
      securityContext:
        runAsUser: 10000
        fsGroup: 10000
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      containers:
      - name: core
        image: goharbor/harbor-core:v2.10.2
        imagePullPolicy: IfNotPresent
        startupProbe:
          httpGet:
            path: /api/v2.0/ping
            scheme: HTTP
            port: 8080
          failureThreshold: 360
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/v2.0/ping
            scheme: HTTP
            port: 8080
          failureThreshold: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v2.0/ping
            scheme: HTTP
            port: 8080
          failureThreshold: 2
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: "harbor-core"
        - secretRef:
            name: "harbor-core"
        env:
          - name: CORE_SECRET
            valueFrom:
              secretKeyRef:
                name: harbor-core
                key: secretKey
          - name: JOBSERVICE_SECRET
            valueFrom:
              secretKeyRef:
                name: harbor-core
                key: JOBSERVICE_SECRET
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: harbor-core
                key: POSTGRESQL_PASSWORD
          - name: CSRF_KEY
            valueFrom:
              secretKeyRef:
                name: harbor-core
                key: CSRF_KEY
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /etc/core/app.conf
          subPath: app.conf
        - name: secret-key
          mountPath: /etc/core/key
          subPath: key
        - name: token-service-private-key
          mountPath: /etc/core/private_key.pem
          subPath: tls.key
        - name: ca-download
          mountPath: /etc/core/ca
        - name: ssl-certs
          mountPath: /etc/harbor/ssl
          subPath: ""
      volumes:
      - name: config
        configMap:
          name: harbor-core
          items:
            - key: app.conf
              path: app.conf
      - name: secret-key
        secret:
          secretName: harbor-core
          items:
            - key: secretKey
              path: key
      - name: token-service-private-key
        secret:
          secretName: harbor-tls
          items:
            - key: tls.key
              path: tls.key
      - name: ca-download
        secret:
          secretName: harbor-tls
      - name: ssl-certs
        secret:
          secretName: harbor-tls
      - name: psc
        emptyDir: {}
